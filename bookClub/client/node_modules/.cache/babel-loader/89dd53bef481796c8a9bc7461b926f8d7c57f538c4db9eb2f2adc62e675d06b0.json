{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\omris\\\\Desktop\\\\WebProject\\\\bookclub\\\\client\\\\src\\\\components\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Header from './Header';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [booksDataBySubject, setBooksDataBySubject] = useState({\n    love: [],\n    kids: [],\n    fantasy: []\n  });\n  const subjects = ['love', 'kids', 'fantasy'];\n  const fetchBooksAndStoreData = async subject => {\n    try {\n      const url = `https://openlibrary.org/subjects/${subject}.json?limit=15`;\n      const response = await axios.get(url);\n      const books = response.data.works.map(work => ({\n        title: work.title,\n        author: work.authors.map(author => author.name).join(', '),\n        imgSrc: work.cover_id ? `https://covers.openlibrary.org/b/id/${work.cover_id}-L.jpg` : 'path/to/default/image.jpg'\n      }));\n\n      // Store the books data for the subject\n      setBooksDataBySubject(prevState => ({\n        ...prevState,\n        [subject]: books\n      }));\n    } catch (error) {\n      console.error(`Failed to fetch books for ${subject}:`, error);\n    }\n  };\n  useEffect(() => {\n    subjects.forEach(subject => fetchBooksAndStoreData(subject));\n  }, []);\n  const redirectToDiscussion = book => {\n    window.location.href = `GroupDisscusion.html?title=${encodeURIComponent(book.title)}&author=${encodeURIComponent(book.author)}&imgSrc=${encodeURIComponent(book.imgSrc)}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-gray-100 bg-cover\",\n    style: {\n      backgroundImage: \"url('backgrounddddd.jpeg')\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), \" \", subjects.map(subject => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-bold mb-4 px-8\",\n        children: [\"Books of \", subject.charAt(0).toUpperCase() + subject.slice(1)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"subject-container flex overflow-x-auto space-x-4 px-8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)]\n    }, subject, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"elEZHBYe9/ZgbD00YWZKb8FBPpI=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","axios","Header","jsxDEV","_jsxDEV","Home","_s","booksDataBySubject","setBooksDataBySubject","love","kids","fantasy","subjects","fetchBooksAndStoreData","subject","url","response","get","books","data","works","map","work","title","author","authors","name","join","imgSrc","cover_id","prevState","error","console","forEach","redirectToDiscussion","book","window","location","href","encodeURIComponent","className","style","backgroundImage","children","fileName","_jsxFileName","lineNumber","columnNumber","charAt","toUpperCase","slice","_c","$RefreshReg$"],"sources":["C:/Users/omris/Desktop/WebProject/bookclub/client/src/components/Home.js"],"sourcesContent":["import React from 'react'\r\nimport { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport Header from './Header';\r\n\r\nconst Home = () => {\r\n  const [booksDataBySubject, setBooksDataBySubject] = useState({ love: [], kids: [], fantasy: [] });\r\n  const subjects = ['love', 'kids', 'fantasy'];\r\n\r\n  const fetchBooksAndStoreData = async (subject) => {\r\n    try {\r\n      const url = `https://openlibrary.org/subjects/${subject}.json?limit=15`;\r\n      const response = await axios.get(url);\r\n      const books = response.data.works.map(work => ({\r\n        title: work.title,\r\n        author: work.authors.map(author => author.name).join(', '),\r\n        imgSrc: work.cover_id ? `https://covers.openlibrary.org/b/id/${work.cover_id}-L.jpg` : 'path/to/default/image.jpg'\r\n      }));\r\n\r\n      // Store the books data for the subject\r\n      setBooksDataBySubject(prevState => ({ ...prevState, [subject]: books }));\r\n    } catch (error) {\r\n      console.error(`Failed to fetch books for ${subject}:`, error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    subjects.forEach(subject => fetchBooksAndStoreData(subject));\r\n  }, []);\r\n\r\n  const redirectToDiscussion = (book) => {\r\n    window.location.href = `GroupDisscusion.html?title=${encodeURIComponent(book.title)}&author=${encodeURIComponent(book.author)}&imgSrc=${encodeURIComponent(book.imgSrc)}`;\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-gray-100 bg-cover\" style={{ backgroundImage: \"url('backgrounddddd.jpeg')\" }}>\r\n      <Header /> {/* Use the Header component */}\r\n      {/* Book subjects display */}\r\n      {subjects.map(subject => (\r\n        <div key={subject} className=\"mb-8\">\r\n          <h2 className=\"text-2xl font-bold mb-4 px-8\">Books of {subject.charAt(0).toUpperCase() + subject.slice(1)}</h2>\r\n          <div className=\"subject-container flex overflow-x-auto space-x-4 px-8\">\r\n            {/* Books display logic remains the same */}\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}