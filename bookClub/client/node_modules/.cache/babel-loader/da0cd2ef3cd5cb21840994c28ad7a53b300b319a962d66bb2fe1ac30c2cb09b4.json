{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\omris\\\\Desktop\\\\WebProject\\\\bookclub\\\\client\\\\src\\\\components\\\\Register.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useRef, useState, useEffect } from \"react\";\nimport { faCheck, faTimes, faInfoCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport axios from '../api/axios';\n\n// User name is between 4-24 chars, first is a letter others letters/numbers/-/_\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst USER_REGEX = /^[a-zA-Z][a-zA-z0-9-_]{3,23}$/;\n\n// Password required at least: 1 lower case letter, 1 upper case letter, 1 number, and 1 symbol\nconst PWD_REGEX = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%]).{8,24}$/;\n\n// Email required example@email.___ \nconst EMAIL_REGEX = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\nconst REGISTER_URL = 'http://localhost:5000/register';\nconst Register = () => {\n  _s();\n  const userRef = useRef();\n  const errRef = useRef();\n  const [user, setUser] = useState('');\n  const [validName, setValidName] = useState(false); // check if the username is valid or not\n  const [userFocus, setUserFocus] = useState(false); // focus on that input field or not\n\n  const [pwd, setPwd] = useState('');\n  const [validPwd, setValidPwd] = useState(false); // check if the password is valid or not\n  const [pwdFocus, setPwdFocus] = useState(false); // focus on that input field or not\n\n  const [matchPwd, setMatchPwd] = useState('');\n  const [validMatch, setValidMatch] = useState(false); // check if the matching password is valid or not\n  const [matchFocus, setMatchFocus] = useState(false); // focus on that input field or not\n\n  const [email, setEmail] = useState('');\n  const [validEmail, setValidEmail] = useState(false); // check if the matching password is valid or not\n  const [emailFocus, setEmailFocus] = useState(false); // focus on that input field or not\n\n  const [errMsg, setErrMsg] = useState(''); // error message if there os an error\n  const [success, setSuccess] = useState(false); // check if successfuly submit the registration\n\n  useEffect(() => {\n    userRef.current.focus(); // focus on the username input\n  }, []);\n\n  // useEffect hook for handling side effects in functional components.\n  useEffect(() => {\n    const result = USER_REGEX.test(user); // Test the current 'user' value against the USER_REGEX pattern.\n    console.log(result);\n    console.log(user);\n    setValidName(result);\n  }, [user]); // Dependency array: This effect runs after the first render and anytime the 'user' value changes.\n\n  // useEffect hook for handling side effects in functional components.\n  useEffect(() => {\n    const result = PWD_REGEX.test(pwd); // Test the current 'password' value against the USER_REGEX pattern.\n    console.log(result);\n    console.log(pwd);\n    setValidPwd(result);\n    const match = pwd === matchPwd; // check if the password is equal to the matching password\n    setValidMatch(match);\n  }, [pwd, matchPwd]); // Dependency array: This effect runs after the first render and anytime the 'pwd or matchPwd' value changes.\n\n  // If we displayed an error message, so after a change of on of these 3 inputs, the error message will removed.\n  useEffect(() => {\n    setErrMsg('');\n  }, [user, pwd, matchPwd]);\n  useEffect(() => {\n    const result = EMAIL_REGEX.test(email); // Test the current 'email' value against the EMAIL_REGEX pattern.\n    console.log(result);\n    console.log(email);\n    setValidEmail(result); // Corrected from setValidName to setValidEmail\n  }, [email]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const isUsernameValid = USER_REGEX.test(user);\n    const isPasswordValid = PWD_REGEX.test(pwd);\n    const isEmailValid = EMAIL_REGEX.test(email);\n    if (!isUsernameValid || !isPasswordValid || !isEmailValid) {\n      setErrMsg(\"Invalid Entry\");\n      return;\n    }\n    try {\n      const response = await axios.post(REGISTER_URL, JSON.stringify({\n        username: user,\n        password: pwd,\n        email: email\n      }), {\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        withCredentials: true\n      });\n      console.log(response.data);\n      console.log(response.accessToken);\n      console.log(JSON.stringify(response));\n      setSuccess(true);\n      setUser('');\n      setPwd('');\n      setMatchPwd('');\n      setEmail('');\n    } catch (err) {\n      var _err$response;\n      if (!(err !== null && err !== void 0 && err.response)) {\n        setErrMsg('No Server Response');\n      } else if (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.status) === 409) {\n        setErrMsg('Username Taken');\n      } else {\n        setErrMsg('Regestration Failed');\n      }\n      errRef.current.focus(); // set the focus on this error\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: success ? /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Success!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#\",\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        ref: errRef,\n        className: errMsg ? \"errmsg\" : \"offscreen\",\n        \"aria-live\": \"assertive\",\n        children: errMsg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\",\n          children: [\"Username:\", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: validName ? \"valid\" : \"hide\",\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faCheck\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: validName || !user ? \"hide\" : \"invalid\",\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faTimes\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"username\",\n          ref: userRef,\n          autoComplete: \"off\",\n          onChange: e => setUser(e.target.value),\n          required: true,\n          \"aria-invalid\": validName ? \"false\" : \"true\",\n          \"aria-describedby\": \"uidnote\",\n          onFocus: () => setUserFocus(true),\n          onBlur: () => setUserFocus(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"uidnote\",\n          className: userFocus && user && !validName ? \"instructions\" : \"offscreen\",\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faInfoCircle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 29\n          }, this), \"4 to 24 characters.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 48\n          }, this), \"Must begin with a letter.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 54\n          }, this), \"Letters, numbers, underscores, hyphens allowed.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: [\"Password:\", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: validPwd ? \"valid\" : \"hide\",\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faCheck\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: validPwd || !pwd ? \"hide\" : \"invalid\",\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faTimes\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          onChange: e => setPwd(e.target.value),\n          value: pwd,\n          required: true,\n          \"aria-invalid\": validPwd ? \"false\" : \"true\",\n          \"aria-describedby\": \"pwdnote\",\n          onFocus: () => setPwdFocus(true),\n          onBlur: () => setPwdFocus(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"pwdnote\",\n          className: pwdFocus && !validPwd ? \"instructions\" : \"offscreen\",\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faInfoCircle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 29\n          }, this), \"8 to 24 characters.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 48\n          }, this), \"Must include uppercase and lowercase letters, a number and a special character.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 108\n          }, this), \"Allowed special characters:\", /*#__PURE__*/_jsxDEV(\"span\", {\n            \"aria-label\": \"exclamation mark\",\n            children: \"!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            \"aria-label\": \"at symbol\",\n            children: \"@\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            \"aria-label\": \"hashtag\",\n            children: \"#\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            \"aria-label\": \"dollar sign\",\n            children: \"$\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            \"aria-label\": \"percent\",\n            children: \"%\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"confirm_pwd\",\n          children: [\"Confirm Password:\", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: validMatch && matchPwd ? \"valid\" : \"hide\",\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faCheck\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: validMatch || !matchPwd ? \"hide\" : \"invalid\",\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faTimes\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"confirm_pwd\",\n          onChange: e => setMatchPwd(e.target.value),\n          required: true,\n          \"aria-invalid\": validMatch ? \"false\" : \"true\",\n          \"aria-describedby\": \"confirmnote\",\n          onFocus: () => setMatchFocus(true),\n          onBlur: () => setMatchFocus(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"confirmnote\",\n          className: matchFocus && !validMatch ? \"instructions\" : \"offscreen\",\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faInfoCircle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 29\n          }, this), \"Must match the first password input field.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: [\"Email:\", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: validEmail ? \"valid\" : \"hide\",\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faCheck\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: validEmail || !email ? \"hide\" : \"invalid\",\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faTimes\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          autoComplete: \"off\",\n          onChange: e => setEmail(e.target.value),\n          required: true,\n          \"aria-invalid\": !validEmail ? \"false\" : \"true\",\n          \"aria-describedby\": \"emailnote\",\n          onFocus: () => setEmailFocus(true),\n          onBlur: () => setEmailFocus(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"emailnote\",\n          className: emailFocus && !validEmail ? \"instructions\" : \"offscreen\",\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faInfoCircle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 25\n          }, this), \"Must be a valid email address.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: !validName || !validPwd || !validMatch ? true : false,\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Already Registered?\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 48\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"line\",\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"#\",\n              children: \"Sign In\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n};\n_s(Register, \"u8wRkh/S66XCEUGitEUS9/AljQU=\");\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useRef","useState","useEffect","faCheck","faTimes","faInfoCircle","FontAwesomeIcon","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","USER_REGEX","PWD_REGEX","EMAIL_REGEX","REGISTER_URL","Register","_s","userRef","errRef","user","setUser","validName","setValidName","userFocus","setUserFocus","pwd","setPwd","validPwd","setValidPwd","pwdFocus","setPwdFocus","matchPwd","setMatchPwd","validMatch","setValidMatch","matchFocus","setMatchFocus","email","setEmail","validEmail","setValidEmail","emailFocus","setEmailFocus","errMsg","setErrMsg","success","setSuccess","current","focus","result","test","console","log","match","handleSubmit","e","preventDefault","isUsernameValid","isPasswordValid","isEmailValid","response","post","JSON","stringify","username","password","headers","withCredentials","data","accessToken","err","_err$response","status","children","fileName","_jsxFileName","lineNumber","columnNumber","href","ref","className","onSubmit","htmlFor","icon","type","id","autoComplete","onChange","target","value","required","onFocus","onBlur","disabled","_c","$RefreshReg$"],"sources":["C:/Users/omris/Desktop/WebProject/bookclub/client/src/components/Register.js"],"sourcesContent":["import React from 'react'\r\nimport { useRef, useState, useEffect } from \"react\";\r\nimport { faCheck, faTimes, faInfoCircle  } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport axios from '../api/axios';\r\n\r\n// User name is between 4-24 chars, first is a letter others letters/numbers/-/_\r\nconst USER_REGEX = /^[a-zA-Z][a-zA-z0-9-_]{3,23}$/;\r\n\r\n// Password required at least: 1 lower case letter, 1 upper case letter, 1 number, and 1 symbol\r\nconst PWD_REGEX = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%]).{8,24}$/;\r\n\r\n// Email required example@email.___ \r\nconst EMAIL_REGEX = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\r\n\r\nconst REGISTER_URL = 'http://localhost:5000/register';\r\n\r\nconst Register = () => {\r\n\r\n    const userRef = useRef();\r\n    const errRef = useRef();\r\n    \r\n    const [user, setUser] = useState('');\r\n    const [validName, setValidName] = useState(false); // check if the username is valid or not\r\n    const [userFocus, setUserFocus] = useState(false); // focus on that input field or not\r\n    \r\n    const [pwd, setPwd] = useState('');\r\n    const [validPwd, setValidPwd] = useState(false); // check if the password is valid or not\r\n    const [pwdFocus, setPwdFocus] = useState(false); // focus on that input field or not\r\n    \r\n    const [matchPwd, setMatchPwd] = useState('');\r\n    const [validMatch, setValidMatch] = useState(false); // check if the matching password is valid or not\r\n    const [matchFocus, setMatchFocus] = useState(false); // focus on that input field or not\r\n    \r\n    const [email, setEmail] = useState('');\r\n    const [validEmail, setValidEmail] = useState(false); // check if the matching password is valid or not\r\n    const [emailFocus, setEmailFocus] = useState(false); // focus on that input field or not\r\n    \r\n    const [errMsg, setErrMsg] = useState(''); // error message if there os an error\r\n    const [success, setSuccess] = useState(false); // check if successfuly submit the registration\r\n\r\n    useEffect(() => {\r\n        userRef.current.focus(); // focus on the username input\r\n    }, [])\r\n    \r\n    // useEffect hook for handling side effects in functional components.\r\n    useEffect(() => {\r\n        const result = USER_REGEX.test(user); // Test the current 'user' value against the USER_REGEX pattern.\r\n        console.log(result);\r\n        console.log(user);\r\n        setValidName(result);\r\n    }, [user]) // Dependency array: This effect runs after the first render and anytime the 'user' value changes.\r\n    \r\n    // useEffect hook for handling side effects in functional components.\r\n    useEffect(() => {\r\n        const result = PWD_REGEX.test(pwd); // Test the current 'password' value against the USER_REGEX pattern.\r\n        console.log(result);\r\n        console.log(pwd);\r\n        setValidPwd(result);\r\n        const match = pwd === matchPwd; // check if the password is equal to the matching password\r\n        setValidMatch(match);\r\n        }, [pwd, matchPwd]) // Dependency array: This effect runs after the first render and anytime the 'pwd or matchPwd' value changes.\r\n        \r\n        // If we displayed an error message, so after a change of on of these 3 inputs, the error message will removed.\r\n    useEffect(() => {\r\n            setErrMsg('');\r\n    }, [user, pwd, matchPwd]) \r\n  \r\n    useEffect(() => {\r\n        const result = EMAIL_REGEX.test(email); // Test the current 'email' value against the EMAIL_REGEX pattern.\r\n        console.log(result);\r\n        console.log(email);\r\n        setValidEmail(result); // Corrected from setValidName to setValidEmail\r\n    }, [email])\r\n    \r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        const isUsernameValid = USER_REGEX.test(user);\r\n        const isPasswordValid = PWD_REGEX.test(pwd);\r\n        const isEmailValid = EMAIL_REGEX.test(email);\r\n        if (!isUsernameValid || !isPasswordValid || !isEmailValid) {\r\n            setErrMsg(\"Invalid Entry\");\r\n            return;\r\n        }\r\n        \r\n        try {\r\n            const response = await axios.post(REGISTER_URL,\r\n                JSON.stringify({ username: user, password: pwd, email: email }),\r\n                {\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                    withCredentials: true\r\n                }\r\n            );\r\n            console.log(response.data);\r\n            console.log(response.accessToken);\r\n            console.log(JSON.stringify(response));\r\n            setSuccess(true);\r\n            setUser('');\r\n            setPwd('');\r\n            setMatchPwd('');\r\n            setEmail('');\r\n            } catch (err) {\r\n            if(!err?.response) {\r\n                setErrMsg('No Server Response');\r\n            } else if(err.response?.status === 409) {\r\n                setErrMsg('Username Taken');\r\n            } else {\r\n                setErrMsg('Regestration Failed');\r\n            }\r\n            errRef.current.focus(); // set the focus on this error\r\n        }\r\n    }\r\n  \r\n    return (\r\n        <>\r\n            {success ? (\r\n                    <section>\r\n                        <h1>Success!</h1>\r\n                        <p>\r\n                            <a href=\"#\">Sign In</a>\r\n                        </p>\r\n                    </section>\r\n            ) : (\r\n                <section>\r\n                    <p ref={errRef} className={errMsg ? \"errmsg\" : \"offscreen\"} aria-live=\"assertive\">{errMsg}</p>\r\n                    <h1>Register</h1>\r\n                    <form onSubmit={handleSubmit}>\r\n                        <label htmlFor=\"username\">\r\n                            Username: \r\n                            <span className={validName ? \"valid\" : \"hide\"}>\r\n                                <FontAwesomeIcon icon={faCheck} />\r\n                            </span>\r\n                            <span className={validName || !user ? \"hide\" : \"invalid\"}>\r\n                                <FontAwesomeIcon icon={faTimes} />\r\n                            </span>\r\n                        </label>\r\n                        <input \r\n                            type=\"text\"\r\n                            id=\"username\"\r\n                            ref={userRef}\r\n                            autoComplete=\"off\"\r\n                            onChange={(e) => setUser(e.target.value)}\r\n                            required\r\n                            aria-invalid={validName ? \"false\" : \"true\"}\r\n                            aria-describedby='uidnote'\r\n                            onFocus={() => setUserFocus(true)}\r\n                            onBlur={() => setUserFocus(false)}\r\n                        />\r\n                        <p id='uidnote' className={userFocus && user && !validName ? \"instructions\" : \"offscreen\"}>\r\n                            <FontAwesomeIcon icon={faInfoCircle } />\r\n                            4 to 24 characters.<br />\r\n                            Must begin with a letter.<br />\r\n                            Letters, numbers, underscores, hyphens allowed.\r\n                        </p>\r\n\r\n                        <label htmlFor=\"password\">\r\n                            Password:\r\n                            <span className={validPwd ? \"valid\" : \"hide\"}>\r\n                                <FontAwesomeIcon icon={faCheck} />\r\n                            </span>\r\n                            <span className={validPwd || !pwd ? \"hide\" : \"invalid\"}>\r\n                                <FontAwesomeIcon icon={faTimes} />\r\n                            </span>\r\n                        </label>\r\n                        <input\r\n                            type=\"password\"\r\n                            id=\"password\"\r\n                            onChange={(e) => setPwd(e.target.value)}\r\n                            value={pwd}\r\n                            required\r\n                            aria-invalid={validPwd ? \"false\" : \"true\"}\r\n                            aria-describedby=\"pwdnote\"\r\n                            onFocus={() => setPwdFocus(true)}\r\n                            onBlur={() => setPwdFocus(false)}\r\n                        />\r\n                        <p id=\"pwdnote\" className={pwdFocus && !validPwd ? \"instructions\" : \"offscreen\"}>\r\n                            <FontAwesomeIcon icon={faInfoCircle} />\r\n                            8 to 24 characters.<br />\r\n                            Must include uppercase and lowercase letters, a number and a special character.<br />\r\n                            Allowed special characters: \r\n                            <span aria-label=\"exclamation mark\">!</span> \r\n                            <span aria-label=\"at symbol\">@</span>\r\n                            <span aria-label=\"hashtag\">#</span>\r\n                            <span aria-label=\"dollar sign\">$</span>\r\n                            <span aria-label=\"percent\">%</span>\r\n                        </p>\r\n\r\n                        <label htmlFor=\"confirm_pwd\">\r\n                            Confirm Password:\r\n                            <span className={validMatch && matchPwd ? \"valid\" : \"hide\"}>\r\n                                <FontAwesomeIcon icon={faCheck} />\r\n                            </span>\r\n                            <span className={validMatch || !matchPwd ? \"hide\" : \"invalid\"}>\r\n                                <FontAwesomeIcon icon={faTimes} />\r\n                            </span>\r\n                        </label>\r\n                        <input\r\n                            type=\"password\"\r\n                            id=\"confirm_pwd\"\r\n                            onChange={(e) => setMatchPwd(e.target.value)}\r\n                            required\r\n                            aria-invalid={validMatch ? \"false\" : \"true\"}\r\n                            aria-describedby=\"confirmnote\"\r\n                            onFocus={() => setMatchFocus(true)}\r\n                            onBlur={() => setMatchFocus(false)}\r\n                        />\r\n                        <p id=\"confirmnote\" className={matchFocus && !validMatch ? \"instructions\" : \"offscreen\"}>\r\n                            <FontAwesomeIcon icon={faInfoCircle} />\r\n                            Must match the first password input field.\r\n                        </p>\r\n\r\n                        <label htmlFor=\"email\">\r\n                            Email:\r\n                            <span className={validEmail ? \"valid\" : \"hide\"}>\r\n                                <FontAwesomeIcon icon={faCheck} />\r\n                            </span>\r\n                            <span className={validEmail || !email ? \"hide\" : \"invalid\"}>\r\n                                <FontAwesomeIcon icon={faTimes} />\r\n                            </span>\r\n                        </label>\r\n                        <input \r\n                            type=\"email\"\r\n                            id=\"email\"\r\n                            autoComplete=\"off\"\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                            required\r\n                            aria-invalid={!validEmail ? \"false\" : \"true\"}\r\n                            aria-describedby=\"emailnote\"\r\n                            onFocus={() => setEmailFocus(true)}\r\n                            onBlur={() => setEmailFocus(false)}\r\n                        />\r\n                        <p id=\"emailnote\" className={emailFocus && !validEmail ? \"instructions\" : \"offscreen\"}>\r\n                        <FontAwesomeIcon icon={faInfoCircle} />\r\n                            Must be a valid email address.\r\n                        </p>\r\n\r\n\r\n                        <button disabled={!validName || !validPwd || !validMatch ? true : false}>\r\n                            Sign Up\r\n                        </button>\r\n                        <p>\r\n                            Already Registered?<br />\r\n                            <span className='line'>\r\n                                {/* PUT LINK TO SIGN IN PAGE */}\r\n                                <a href='#'>Sign In</a> \r\n                            </span>\r\n                        </p>\r\n                    </form>\r\n                </section>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Register"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACnD,SAASC,OAAO,EAAEC,OAAO,EAAEC,YAAY,QAAS,mCAAmC;AACnF,SAASC,eAAe,QAAQ,gCAAgC;AAChE,OAAOC,KAAK,MAAM,cAAc;;AAEhC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AACA,MAAMC,UAAU,GAAG,+BAA+B;;AAElD;AACA,MAAMC,SAAS,GAAG,yDAAyD;;AAE3E;AACA,MAAMC,WAAW,GAAG,gDAAgD;AAEpE,MAAMC,YAAY,GAAG,gCAAgC;AAErD,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEnB,MAAMC,OAAO,GAAGlB,MAAM,CAAC,CAAC;EACxB,MAAMmB,MAAM,GAAGnB,MAAM,CAAC,CAAC;EAEvB,MAAM,CAACoB,IAAI,EAAEC,OAAO,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACqB,SAAS,EAAEC,YAAY,CAAC,GAAGtB,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EACnD,MAAM,CAACuB,SAAS,EAAEC,YAAY,CAAC,GAAGxB,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAEnD,MAAM,CAACyB,GAAG,EAAEC,MAAM,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAM,CAAC2B,QAAQ,EAAEC,WAAW,CAAC,GAAG5B,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EACjD,MAAM,CAAC6B,QAAQ,EAAEC,WAAW,CAAC,GAAG9B,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAEjD,MAAM,CAAC+B,QAAQ,EAAEC,WAAW,CAAC,GAAGhC,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACiC,UAAU,EAAEC,aAAa,CAAC,GAAGlC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EACrD,MAAM,CAACmC,UAAU,EAAEC,aAAa,CAAC,GAAGpC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAErD,MAAM,CAACqC,KAAK,EAAEC,QAAQ,CAAC,GAAGtC,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACuC,UAAU,EAAEC,aAAa,CAAC,GAAGxC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EACrD,MAAM,CAACyC,UAAU,EAAEC,aAAa,CAAC,GAAG1C,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAErD,MAAM,CAAC2C,MAAM,EAAEC,SAAS,CAAC,GAAG5C,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC1C,MAAM,CAAC6C,OAAO,EAAEC,UAAU,CAAC,GAAG9C,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAE/CC,SAAS,CAAC,MAAM;IACZgB,OAAO,CAAC8B,OAAO,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EAC7B,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA/C,SAAS,CAAC,MAAM;IACZ,MAAMgD,MAAM,GAAGtC,UAAU,CAACuC,IAAI,CAAC/B,IAAI,CAAC,CAAC,CAAC;IACtCgC,OAAO,CAACC,GAAG,CAACH,MAAM,CAAC;IACnBE,OAAO,CAACC,GAAG,CAACjC,IAAI,CAAC;IACjBG,YAAY,CAAC2B,MAAM,CAAC;EACxB,CAAC,EAAE,CAAC9B,IAAI,CAAC,CAAC,EAAC;;EAEX;EACAlB,SAAS,CAAC,MAAM;IACZ,MAAMgD,MAAM,GAAGrC,SAAS,CAACsC,IAAI,CAACzB,GAAG,CAAC,CAAC,CAAC;IACpC0B,OAAO,CAACC,GAAG,CAACH,MAAM,CAAC;IACnBE,OAAO,CAACC,GAAG,CAAC3B,GAAG,CAAC;IAChBG,WAAW,CAACqB,MAAM,CAAC;IACnB,MAAMI,KAAK,GAAG5B,GAAG,KAAKM,QAAQ,CAAC,CAAC;IAChCG,aAAa,CAACmB,KAAK,CAAC;EACpB,CAAC,EAAE,CAAC5B,GAAG,EAAEM,QAAQ,CAAC,CAAC,EAAC;;EAEpB;EACJ9B,SAAS,CAAC,MAAM;IACR2C,SAAS,CAAC,EAAE,CAAC;EACrB,CAAC,EAAE,CAACzB,IAAI,EAAEM,GAAG,EAAEM,QAAQ,CAAC,CAAC;EAEzB9B,SAAS,CAAC,MAAM;IACZ,MAAMgD,MAAM,GAAGpC,WAAW,CAACqC,IAAI,CAACb,KAAK,CAAC,CAAC,CAAC;IACxCc,OAAO,CAACC,GAAG,CAACH,MAAM,CAAC;IACnBE,OAAO,CAACC,GAAG,CAACf,KAAK,CAAC;IAClBG,aAAa,CAACS,MAAM,CAAC,CAAC,CAAC;EAC3B,CAAC,EAAE,CAACZ,KAAK,CAAC,CAAC;EAEX,MAAMiB,YAAY,GAAG,MAAOC,CAAC,IAAK;IAC9BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAMC,eAAe,GAAG9C,UAAU,CAACuC,IAAI,CAAC/B,IAAI,CAAC;IAC7C,MAAMuC,eAAe,GAAG9C,SAAS,CAACsC,IAAI,CAACzB,GAAG,CAAC;IAC3C,MAAMkC,YAAY,GAAG9C,WAAW,CAACqC,IAAI,CAACb,KAAK,CAAC;IAC5C,IAAI,CAACoB,eAAe,IAAI,CAACC,eAAe,IAAI,CAACC,YAAY,EAAE;MACvDf,SAAS,CAAC,eAAe,CAAC;MAC1B;IACJ;IAEA,IAAI;MACA,MAAMgB,QAAQ,GAAG,MAAMtD,KAAK,CAACuD,IAAI,CAAC/C,YAAY,EAC1CgD,IAAI,CAACC,SAAS,CAAC;QAAEC,QAAQ,EAAE7C,IAAI;QAAE8C,QAAQ,EAAExC,GAAG;QAAEY,KAAK,EAAEA;MAAM,CAAC,CAAC,EAC/D;QACI6B,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,eAAe,EAAE;MACrB,CACJ,CAAC;MACDhB,OAAO,CAACC,GAAG,CAACQ,QAAQ,CAACQ,IAAI,CAAC;MAC1BjB,OAAO,CAACC,GAAG,CAACQ,QAAQ,CAACS,WAAW,CAAC;MACjClB,OAAO,CAACC,GAAG,CAACU,IAAI,CAACC,SAAS,CAACH,QAAQ,CAAC,CAAC;MACrCd,UAAU,CAAC,IAAI,CAAC;MAChB1B,OAAO,CAAC,EAAE,CAAC;MACXM,MAAM,CAAC,EAAE,CAAC;MACVM,WAAW,CAAC,EAAE,CAAC;MACfM,QAAQ,CAAC,EAAE,CAAC;IACZ,CAAC,CAAC,OAAOgC,GAAG,EAAE;MAAA,IAAAC,aAAA;MACd,IAAG,EAACD,GAAG,aAAHA,GAAG,eAAHA,GAAG,CAAEV,QAAQ,GAAE;QACfhB,SAAS,CAAC,oBAAoB,CAAC;MACnC,CAAC,MAAM,IAAG,EAAA2B,aAAA,GAAAD,GAAG,CAACV,QAAQ,cAAAW,aAAA,uBAAZA,aAAA,CAAcC,MAAM,MAAK,GAAG,EAAE;QACpC5B,SAAS,CAAC,gBAAgB,CAAC;MAC/B,CAAC,MAAM;QACHA,SAAS,CAAC,qBAAqB,CAAC;MACpC;MACA1B,MAAM,CAAC6B,OAAO,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;IAC5B;EACJ,CAAC;EAED,oBACIxC,OAAA,CAAAE,SAAA;IAAA+D,QAAA,EACK5B,OAAO,gBACArC,OAAA;MAAAiE,QAAA,gBACIjE,OAAA;QAAAiE,QAAA,EAAI;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACjBrE,OAAA;QAAAiE,QAAA,eACIjE,OAAA;UAAGsE,IAAI,EAAC,GAAG;UAAAL,QAAA,EAAC;QAAO;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,gBAEdrE,OAAA;MAAAiE,QAAA,gBACIjE,OAAA;QAAGuE,GAAG,EAAE7D,MAAO;QAAC8D,SAAS,EAAErC,MAAM,GAAG,QAAQ,GAAG,WAAY;QAAC,aAAU,WAAW;QAAA8B,QAAA,EAAE9B;MAAM;QAAA+B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC9FrE,OAAA;QAAAiE,QAAA,EAAI;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACjBrE,OAAA;QAAMyE,QAAQ,EAAE3B,YAAa;QAAAmB,QAAA,gBACzBjE,OAAA;UAAO0E,OAAO,EAAC,UAAU;UAAAT,QAAA,GAAC,WAEtB,eAAAjE,OAAA;YAAMwE,SAAS,EAAE3D,SAAS,GAAG,OAAO,GAAG,MAAO;YAAAoD,QAAA,eAC1CjE,OAAA,CAACH,eAAe;cAAC8E,IAAI,EAAEjF;YAAQ;cAAAwE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChC,CAAC,eACPrE,OAAA;YAAMwE,SAAS,EAAE3D,SAAS,IAAI,CAACF,IAAI,GAAG,MAAM,GAAG,SAAU;YAAAsD,QAAA,eACrDjE,OAAA,CAACH,eAAe;cAAC8E,IAAI,EAAEhF;YAAQ;cAAAuE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CAAC,eACRrE,OAAA;UACI4E,IAAI,EAAC,MAAM;UACXC,EAAE,EAAC,UAAU;UACbN,GAAG,EAAE9D,OAAQ;UACbqE,YAAY,EAAC,KAAK;UAClBC,QAAQ,EAAGhC,CAAC,IAAKnC,OAAO,CAACmC,CAAC,CAACiC,MAAM,CAACC,KAAK,CAAE;UACzCC,QAAQ;UACR,gBAAcrE,SAAS,GAAG,OAAO,GAAG,MAAO;UAC3C,oBAAiB,SAAS;UAC1BsE,OAAO,EAAEA,CAAA,KAAMnE,YAAY,CAAC,IAAI,CAAE;UAClCoE,MAAM,EAAEA,CAAA,KAAMpE,YAAY,CAAC,KAAK;QAAE;UAAAkD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrC,CAAC,eACFrE,OAAA;UAAG6E,EAAE,EAAC,SAAS;UAACL,SAAS,EAAEzD,SAAS,IAAIJ,IAAI,IAAI,CAACE,SAAS,GAAG,cAAc,GAAG,WAAY;UAAAoD,QAAA,gBACtFjE,OAAA,CAACH,eAAe;YAAC8E,IAAI,EAAE/E;UAAc;YAAAsE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,uBACrB,eAAArE,OAAA;YAAAkE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,6BACA,eAAArE,OAAA;YAAAkE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,mDAEnC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eAEJrE,OAAA;UAAO0E,OAAO,EAAC,UAAU;UAAAT,QAAA,GAAC,WAEtB,eAAAjE,OAAA;YAAMwE,SAAS,EAAErD,QAAQ,GAAG,OAAO,GAAG,MAAO;YAAA8C,QAAA,eACzCjE,OAAA,CAACH,eAAe;cAAC8E,IAAI,EAAEjF;YAAQ;cAAAwE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChC,CAAC,eACPrE,OAAA;YAAMwE,SAAS,EAAErD,QAAQ,IAAI,CAACF,GAAG,GAAG,MAAM,GAAG,SAAU;YAAAgD,QAAA,eACnDjE,OAAA,CAACH,eAAe;cAAC8E,IAAI,EAAEhF;YAAQ;cAAAuE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CAAC,eACRrE,OAAA;UACI4E,IAAI,EAAC,UAAU;UACfC,EAAE,EAAC,UAAU;UACbE,QAAQ,EAAGhC,CAAC,IAAK7B,MAAM,CAAC6B,CAAC,CAACiC,MAAM,CAACC,KAAK,CAAE;UACxCA,KAAK,EAAEhE,GAAI;UACXiE,QAAQ;UACR,gBAAc/D,QAAQ,GAAG,OAAO,GAAG,MAAO;UAC1C,oBAAiB,SAAS;UAC1BgE,OAAO,EAAEA,CAAA,KAAM7D,WAAW,CAAC,IAAI,CAAE;UACjC8D,MAAM,EAAEA,CAAA,KAAM9D,WAAW,CAAC,KAAK;QAAE;UAAA4C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpC,CAAC,eACFrE,OAAA;UAAG6E,EAAE,EAAC,SAAS;UAACL,SAAS,EAAEnD,QAAQ,IAAI,CAACF,QAAQ,GAAG,cAAc,GAAG,WAAY;UAAA8C,QAAA,gBAC5EjE,OAAA,CAACH,eAAe;YAAC8E,IAAI,EAAE/E;UAAa;YAAAsE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,uBACpB,eAAArE,OAAA;YAAAkE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,mFACsD,eAAArE,OAAA;YAAAkE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,+BAErF,eAAArE,OAAA;YAAM,cAAW,kBAAkB;YAAAiE,QAAA,EAAC;UAAC;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eAC5CrE,OAAA;YAAM,cAAW,WAAW;YAAAiE,QAAA,EAAC;UAAC;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eACrCrE,OAAA;YAAM,cAAW,SAAS;YAAAiE,QAAA,EAAC;UAAC;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eACnCrE,OAAA;YAAM,cAAW,aAAa;YAAAiE,QAAA,EAAC;UAAC;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eACvCrE,OAAA;YAAM,cAAW,SAAS;YAAAiE,QAAA,EAAC;UAAC;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpC,CAAC,eAEJrE,OAAA;UAAO0E,OAAO,EAAC,aAAa;UAAAT,QAAA,GAAC,mBAEzB,eAAAjE,OAAA;YAAMwE,SAAS,EAAE/C,UAAU,IAAIF,QAAQ,GAAG,OAAO,GAAG,MAAO;YAAA0C,QAAA,eACvDjE,OAAA,CAACH,eAAe;cAAC8E,IAAI,EAAEjF;YAAQ;cAAAwE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChC,CAAC,eACPrE,OAAA;YAAMwE,SAAS,EAAE/C,UAAU,IAAI,CAACF,QAAQ,GAAG,MAAM,GAAG,SAAU;YAAA0C,QAAA,eAC1DjE,OAAA,CAACH,eAAe;cAAC8E,IAAI,EAAEhF;YAAQ;cAAAuE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CAAC,eACRrE,OAAA;UACI4E,IAAI,EAAC,UAAU;UACfC,EAAE,EAAC,aAAa;UAChBE,QAAQ,EAAGhC,CAAC,IAAKvB,WAAW,CAACuB,CAAC,CAACiC,MAAM,CAACC,KAAK,CAAE;UAC7CC,QAAQ;UACR,gBAAczD,UAAU,GAAG,OAAO,GAAG,MAAO;UAC5C,oBAAiB,aAAa;UAC9B0D,OAAO,EAAEA,CAAA,KAAMvD,aAAa,CAAC,IAAI,CAAE;UACnCwD,MAAM,EAAEA,CAAA,KAAMxD,aAAa,CAAC,KAAK;QAAE;UAAAsC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtC,CAAC,eACFrE,OAAA;UAAG6E,EAAE,EAAC,aAAa;UAACL,SAAS,EAAE7C,UAAU,IAAI,CAACF,UAAU,GAAG,cAAc,GAAG,WAAY;UAAAwC,QAAA,gBACpFjE,OAAA,CAACH,eAAe;YAAC8E,IAAI,EAAE/E;UAAa;YAAAsE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,8CAE3C;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eAEJrE,OAAA;UAAO0E,OAAO,EAAC,OAAO;UAAAT,QAAA,GAAC,QAEnB,eAAAjE,OAAA;YAAMwE,SAAS,EAAEzC,UAAU,GAAG,OAAO,GAAG,MAAO;YAAAkC,QAAA,eAC3CjE,OAAA,CAACH,eAAe;cAAC8E,IAAI,EAAEjF;YAAQ;cAAAwE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChC,CAAC,eACPrE,OAAA;YAAMwE,SAAS,EAAEzC,UAAU,IAAI,CAACF,KAAK,GAAG,MAAM,GAAG,SAAU;YAAAoC,QAAA,eACvDjE,OAAA,CAACH,eAAe;cAAC8E,IAAI,EAAEhF;YAAQ;cAAAuE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CAAC,eACRrE,OAAA;UACI4E,IAAI,EAAC,OAAO;UACZC,EAAE,EAAC,OAAO;UACVC,YAAY,EAAC,KAAK;UAClBC,QAAQ,EAAGhC,CAAC,IAAKjB,QAAQ,CAACiB,CAAC,CAACiC,MAAM,CAACC,KAAK,CAAE;UAC1CC,QAAQ;UACR,gBAAc,CAACnD,UAAU,GAAG,OAAO,GAAG,MAAO;UAC7C,oBAAiB,WAAW;UAC5BoD,OAAO,EAAEA,CAAA,KAAMjD,aAAa,CAAC,IAAI,CAAE;UACnCkD,MAAM,EAAEA,CAAA,KAAMlD,aAAa,CAAC,KAAK;QAAE;UAAAgC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtC,CAAC,eACFrE,OAAA;UAAG6E,EAAE,EAAC,WAAW;UAACL,SAAS,EAAEvC,UAAU,IAAI,CAACF,UAAU,GAAG,cAAc,GAAG,WAAY;UAAAkC,QAAA,gBACtFjE,OAAA,CAACH,eAAe;YAAC8E,IAAI,EAAE/E;UAAa;YAAAsE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,kCAEvC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eAGJrE,OAAA;UAAQqF,QAAQ,EAAE,CAACxE,SAAS,IAAI,CAACM,QAAQ,IAAI,CAACM,UAAU,GAAG,IAAI,GAAG,KAAM;UAAAwC,QAAA,EAAC;QAEzE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACTrE,OAAA;UAAAiE,QAAA,GAAG,qBACoB,eAAAjE,OAAA;YAAAkE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACzBrE,OAAA;YAAMwE,SAAS,EAAC,MAAM;YAAAP,QAAA,eAElBjE,OAAA;cAAGsE,IAAI,EAAC,GAAG;cAAAL,QAAA,EAAC;YAAO;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACrB,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACR,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF;EACZ,gBACH,CAAC;AAEX,CAAC;AAAA7D,EAAA,CA3OKD,QAAQ;AAAA+E,EAAA,GAAR/E,QAAQ;AA6Od,eAAeA,QAAQ;AAAA,IAAA+E,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}